---
- name: Create directory for ssh keys for access to kraken clusters managed by {{ kraken_ci_hostname }}
  file: path="{{ jenkins_container_path }}/keys/" state=directory

- name: Get ssh keys for access to kraken clusters managed by {{ kraken_ci_hostname }}
  s3:
    aws_access_key: "{{ aws_key }}"
    aws_secret_key: "{{ aws_secret }}"
    region: "{{ aws_region }}"
    overwrite: True
    bucket: "{{ config_bucket }}"
    object: keys/{{ kraken_ci_hostname }}/{{ item }}
    dest: "{{ jenkins_container_path }}/keys/{{ item }}"
    mode: get
  with_items:
    - id_rsa
    - id_rsa.pub

#- name: Build jenkins container
#  shell: docker build -t {{ jenkins_container_tag }} {{ jenkins_container_path }}

#- name: Run jenkins container
#  docker:
#    name: "{{ jenkins_container_name }}"
#    docker_api_version: "{{ docker_api_version }}"
#    image: "{{ jenkins_container_tag }}"
#    state: started
#    pull: missing
#    net: bridge
#    ports:
#      - "8080:8080"
#      - "50000:50000"
#    volumes_from:
#      - "{{ data_container_name }}"
#    env:
#      VIRTUAL_HOST: "{{ kraken_ci_hostname }}"
#      VIRTUAL_PORT: 8080
#      LETSENCRYPT_HOST: "{{ kraken_ci_hostname }}"
#      LETSENCRYPT_EMAIL: "{{ letsencrypt_email }}"
#      LETSENCRYPT_TEST: "{{ test_instance }}"
#    volumes:
#      - /var/run/docker.sock:/run/docker.sock
#      - /usr/bin/docker:/bin/docker
#      - /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02
#      - /var/run:/ansible
#      - /var/lib/docker/gobuild:/var/lib/docker/gobuild
#      - "{{ secrets_dir }}/docker/config.json:/root/.docker/config.json:ro"
#      - /root/.aws/credentials:/root/.aws/credentials:ro